{"meta":{"title":"Harris Wang Blog","subtitle":null,"description":null,"author":"Harris Wang","url":"https://harriswan9a.github.io"},"pages":[{"title":"about","date":"2016-10-15T14:13:00.000Z","updated":"2017-12-03T15:17:40.773Z","comments":true,"path":"about/index.html","permalink":"https://harriswan9a.github.io/about/index.html","excerpt":"","text":"關於我英文名：Harris , 本名: 王昰閔一個只要眼睛張開就會打開電腦裝忙的傢伙，目前專注於Android、iOS App開發工作\b，偶而看看UI/UX加強藝術美感。 目前接觸有 Java (Android) Swift (iOS) Git / SVN 時間軸 2017.02 - Now GAMA Technology LTD - Software Engineer 2015.02 - 2017.06 SoftMobile - Mobile App Developer 2014.12 - 2015.02 瘋狂賣客 - Web Application Engineer 2014.08 - 2015.11 臺中資策會 2013.09 - 2014.07 臺中國軍醫院 - 中清院區 2009.09 - 2013.06 弘光科技大學 - Hungkuang University 2006.09 - 2009.06 國立沙鹿高工 2003.09 - 2006.06 市立西苑高級中學 - Shi Yuan Senior High School 1990.12 出生於臺中，摩羯男"},{"title":"archives","date":"2016-10-15T14:13:14.000Z","updated":"2017-12-03T15:17:40.773Z","comments":false,"path":"archives/index.html","permalink":"https://harriswan9a.github.io/archives/index.html","excerpt":"","text":""},{"title":"categories","date":"2016-10-15T14:02:49.000Z","updated":"2017-12-03T15:17:40.773Z","comments":false,"path":"categories/index.html","permalink":"https://harriswan9a.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2016-10-15T14:12:38.000Z","updated":"2017-12-03T15:17:40.773Z","comments":false,"path":"tags/index.html","permalink":"https://harriswan9a.github.io/tags/index.html","excerpt":"","text":""},{"title":"works","date":"2016-10-15T14:12:38.000Z","updated":"2017-12-03T15:17:40.773Z","comments":false,"path":"works/index.html","permalink":"https://harriswan9a.github.io/works/index.html","excerpt":"","text":"WEB 打地鼠小遊戲 3Ceeker Android暫無 iOS暫無"}],"posts":[{"title":"React Native 學習筆記","slug":"react-native-note","date":"2016-12-14T10:22:39.000Z","updated":"2017-12-03T15:17:40.773Z","comments":true,"path":"2016/12/14/react-native-note/","link":"","permalink":"https://harriswan9a.github.io/2016/12/14/react-native-note/","excerpt":"","text":"在建立新專案時可指定 react-native module 版本 範例：react-native init FirstProject –version react-native@0.38.1 1react-native init &#123;ProjectName&#125; --version react-native@&#123;version&#125; [RN-Android] 使用 react-native run-android --variant={floversName} 命令，其中 --variant 可以指定要編譯的flovers名稱 範例：flovers有 googlePlay, amazonStore 12react-native run-android --variant=googlePlay# 同 ./gradlew assembleGooglePlayDebug [RN-Android] 使用 react-native run-android --configuration Release 命令，可編譯apk為release並安裝到裝置上 [RN-Android] 開啟Android專案必須手動新增main底下的assets資料夾，否則run-android –configuration Release會失敗… 手動下載index.android.bundle檔 stackoverflow 1curl \"http://localhost:8081/index.android.bundle?platform=android\" -o \"android/app/src/main/assets/index.android.bundle\" [RN-Android] react-native-cli：1.0.0、react-native：0.39.2 無法使用 react-native run-android --configuration Release 問題 android 要自己建立assets資料夾 android/app/src/main/assets 自行建立keystroe，開啟android studio build-&gt;generate signed apk… 確認release.jks存在android/release.jks 開啟 android/app/build.gradle 1234567891011121314151617181920# 在android大括弧內加入android &#123; signingConfigs &#123; release &#123; storeFile file('../release.jks') storePassword 'release' keyAlias 'release' keyPassword 'release' &#125; &#125; # 在release大括弧內加入 signingConfig signingConfigs.release buildTypes &#123; release &#123; signingConfig signingConfigs.release minifyEnabled enableProguardInReleaseBuilds proguardFiles getDefaultProguardFile(\"proguard-android.txt\"), \"proguard-rules.pro\" &#125; &#125;&#125; 即可使用react-native run-android –configuration Release 來編譯不需要render server的apk (持續補充…)","categories":[],"tags":[],"keywords":[]},{"title":"Node Version Manager - Node 版本管理 (nvm)","slug":"Node-Version-Manager","date":"2016-11-30T12:14:38.000Z","updated":"2017-12-03T15:17:40.763Z","comments":true,"path":"2016/11/30/Node-Version-Manager/","link":"","permalink":"https://harriswan9a.github.io/2016/11/30/Node-Version-Manager/","excerpt":"","text":"What’s NVM依據 Node Release 週期來看\b，莫約兩週就會有一個新版本(目前v7.2.0)，對於開發者來說時常更新是一件很麻煩的事情，尤其某些專案用到特定套件發生版本衝突問題，nvm專為Node版本管理而生，能夠於本地端安裝多版本且支援版本間快速切換。 詳細說明請參閱 Node Version Manager Github Node.js Previous Release Version 建議一開始就不要使用 brew 安裝 node，可用命令來查詢目前已經安裝的套件有哪些1$ brew list 12# Uninstall$ brew uninstall node NVM for Mac OS 使用 brew 安裝 nvm (目前版本：0.32.1) 1234$ brew install nvm# 查看nvm版本$ nvm --version0.32.1 使用 nvm 安裝 node，預設會下載安裝最新版 1$ nvm install node 安裝指定的版本號 1$ nvm install v6.9.1 查看目前安裝的所有node版本 1$ nvm ls 切換目前的 node 版本，這邊切換的同時也會同事切換 npm 哦，版本間的 npm 是不一樣的。 12345$ nvm use v6.9.1Now using node v6.9.1 (npm v3.10.8)$ nvm use v7.2.0Now using node v7.2.0 (npm v4.0.2) 切換版本後如果你嘗試開啟新的terminal會發現版本號依然是舊的，此時可以設定default的node版本，設定好後每次開啟新的頁面就會使用default版本了 123456789101112131415161718$ node -vv7.2.0$ nvm alias default v6.9.1default -&gt; v6.9.1$ nvm ls v6.0.0 v6.9.1-&gt; v7.2.0 systemdefault -&gt; v6.9.1node -&gt; stable (-&gt; v7.2.0) (default)stable -&gt; 7.2 (-&gt; v7.2.0) (default)iojs -&gt; N/A (default)lts/* -&gt; lts/boron (-&gt; v6.9.1)lts/argon -&gt; v4.6.2 (-&gt; N/A)lts/boron -&gt; v6.9.1 最後是移除 node 其中一個版本 12$ nvm uninstall v6.9.1Uninstalled node v6.9.1 要注意的是移除後須確認default是否已經指定到其他版本，否則下次開啟終端機會不知道要使用哪一個版本哦 123456Last login: Wed Nov 30 15:18:46 on ttys006N/A: version \"N/A\" is not yet installed.You need to run \"nvm install N/A\" to install it before using it.$ node -vv4.3.0","categories":[],"tags":[{"name":"Node","slug":"Node","permalink":"https://harriswan9a.github.io/tags/Node/"},{"name":"NVM","slug":"NVM","permalink":"https://harriswan9a.github.io/tags/NVM/"}],"keywords":[]},{"title":"Android-CI 配置篇(未完)","slug":"Android-CI-2","date":"2016-11-11T15:13:21.000Z","updated":"2017-12-03T15:17:40.671Z","comments":true,"path":"2016/11/11/Android-CI-2/","link":"","permalink":"https://harriswan9a.github.io/2016/11/11/Android-CI-2/","excerpt":"","text":"前言繼「Android-CI 安裝篇」之後，我們已經準備好系統的建置與設定，接下來將實戰Jenkins設定，讓整個自動化流程work起來。 初始化 Jenkins查看認證碼 1$ sudo cat /var/lib/jenkins/secrets/initialAdminPassword 點擊「Install suggested plugins」安裝預設套件 建立Jenkins使用者帳號 Install PluginsAndroid Emulator PluginAndroid Lint PluginGit Parameter Plug-In (submodule??)GitLab PluginGoogle Play Android Publisher PluginHTML Publisher pluginJavadoc PluginPublish Over DropboxSlack Notification PluginJaCoCo pluginJenkins 組態設定 執行程式數量：1 (請自行衡量設備能力) GitLab 先到gitlab.com登入後取得帳號的Access Token 在註冊","categories":[{"name":"Note","slug":"Note","permalink":"https://harriswan9a.github.io/categories/Note/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://harriswan9a.github.io/tags/Android/"},{"name":"CI","slug":"CI","permalink":"https://harriswan9a.github.io/tags/CI/"},{"name":"Jenkins","slug":"Jenkins","permalink":"https://harriswan9a.github.io/tags/Jenkins/"}],"keywords":[{"name":"Note","slug":"Note","permalink":"https://harriswan9a.github.io/categories/Note/"}]},{"title":"Android-CI 安裝篇","slug":"Android-CI","date":"2016-11-11T00:32:55.000Z","updated":"2017-12-03T15:17:40.695Z","comments":true,"path":"2016/11/11/Android-CI/","link":"","permalink":"https://harriswan9a.github.io/2016/11/11/Android-CI/","excerpt":"","text":"環境建置概述 Ubuntu 16.04.1 server Gradle OpenJDK 8 Android SDK Jenkins (ver 2.3) 安裝Ubuntu 下載 Ubuntu 映像檔 建立虛擬機 安裝Ubuntu 12user: harris password: harris123 更新Ubuntu 1$ sudo apt-get update -y 安裝 openssh-server 1$ sudo apt-get install openssh-server 安裝所需套件 Install git、lib32stdc++6、lib32z1、vim、zip、unzip 1$ sudo apt-get install -y git lib32stdc++6 lib32z1 vim zip unzip Install open-java8-jdk 1$ sudo apt-get install -y openjdk-8-jdk 配置Java環境 12345$ sudo vim /etc/profile.d/java-sdk-env.shexport JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jarexport PATH=$PATH:$JAVA_HOME/bin Install Gradle 2.14.1-bin (安裝Gradle版本需對應Android Plugin版本) 12345678$ cd /opt/$ sudo wget https://services.gradle.org/distributions/gradle-2.14.1-bin.zip$ sudo unzip gradle-2.14.1-bin.zip$ sudo mv /opt/gradle-2.14.1 /opt/gradle$ sudo vim /etc/profile.d/gradle-env.shexport GRADLE_HOME=/opt/gradleexport PATH=$PATH:$GRADLE_HOME/bin Plugin version Required Gradle version 1.0.0 - 1.1.3 2.2.1 - 2.3 1.2.0 - 1.3.1 2.2.1 - 2.9 1.5.0 2.2.1 - 2.13 2.0.0 - 2.1.2 2.10 - 2.13 2.1.3+ 2.14.1+ Install Android SDK(下載頁面) 123456789101112$ sudo wget https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz$ sudo tar zxvf android-sdk_r24.4.1-linux.tgz$ sudo chown -R root:root android-sdk-linux/$ sudo vim /etc/profile.d/android-sdk-env.shexport ANDROID_HOME=/opt/android-sdk-linuxexport PATH=$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$PATH$ sudo /opt/android-sdk-linux/tools/android list sdk --all##### 到這邊建議先備份or快照虛擬機 ###### 安裝全部sdk(非常大..超過20G)$ sudo /opt/android-sdk-linux/tools/android update sdk --no-ui --all Install Jenkins 12345678910$ wget -q -O - http://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -$ sudo sh -c echo deb http://pkg.jenkins.io/debian binary/ &gt; /etc/apt/sources.list.d/jenkins.list$ sudo apt-get update$ sudo apt-get install jenkins$ sudo vim /etc/default/jenkins#修改port default:8080HTTP_PORT=8081 $ sudo reboot -i 用上面的指令安裝完成之後，Jenkins 就會自動被啟動成服務的模式，因此，之後就可以用下面第一行的 service 指令來啟動、停止或重啟 Jenkins 哩 ! 而 Jenkins 的 Web 管理界面是用 8080 埠，如果要進入 Web 管理界面的話，就用下面第二行的網址來開啟囉 ! 1$ sudo service jenkins start | stop | restart Read more:http://www.arthurtoday.com/2015/04/ubuntu-install-jenkins-by-atp.html#ixzz4PgJs3DRg 打開瀏覽器：http://localhost:8081 本篇到此就已經完成系統安裝及設定囉，下一篇則繼續Jenkins的細部配置設定 遇到的坑 解决方法很简单，使用英文安装就好，可以参考这个帖子：http://forum.ubuntu.com.cn/viewtopic.php?f=77&amp;t=471547&amp;p=3137632","categories":[{"name":"Note","slug":"Note","permalink":"https://harriswan9a.github.io/categories/Note/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://harriswan9a.github.io/tags/Android/"},{"name":"CI","slug":"CI","permalink":"https://harriswan9a.github.io/tags/CI/"},{"name":"Jenkins","slug":"Jenkins","permalink":"https://harriswan9a.github.io/tags/Jenkins/"}],"keywords":[{"name":"Note","slug":"Note","permalink":"https://harriswan9a.github.io/categories/Note/"}]},{"title":"Mac OS 關閉/顯示 隱藏檔案","slug":"mac-os-show-all-files","date":"2016-11-02T21:55:41.000Z","updated":"2017-12-03T15:17:40.773Z","comments":true,"path":"2016/11/02/mac-os-show-all-files/","link":"","permalink":"https://harriswan9a.github.io/2016/11/02/mac-os-show-all-files/","excerpt":"","text":"隱藏檔顯示隱藏檔案：1$ defaults write com.apple.finder AppleShowAllFiles TRUE;\\killall Finder 不顯示隱藏檔案：1$ defaults write com.apple.finder AppleShowAllFiles FALSE;\\killall Finder 桌面截圖不顯示陰影123$ defaults write com.apple.screencapture disable-shadow -bool TRUE$ killall SystemUIServer 顯示陰影(Default)12# 可以把上面兩行指令寫在一起$ defaults write com.apple.screencapture disable-shadow -bool FALSE; killall SystemUIServer","categories":[{"name":"Note","slug":"Note","permalink":"https://harriswan9a.github.io/categories/Note/"}],"tags":[{"name":"MacOS","slug":"MacOS","permalink":"https://harriswan9a.github.io/tags/MacOS/"}],"keywords":[{"name":"Note","slug":"Note","permalink":"https://harriswan9a.github.io/categories/Note/"}]},{"title":"iTerm2 終端機也可以這樣用","slug":"Tools-Iterm2-Style-Theme","date":"2016-10-22T15:57:53.000Z","updated":"2017-12-03T15:17:40.764Z","comments":true,"path":"2016/10/22/Tools-Iterm2-Style-Theme/","link":"","permalink":"https://harriswan9a.github.io/2016/10/22/Tools-Iterm2-Style-Theme/","excerpt":"","text":"Powerline font這是個可以將狀態列(statusline)改樣式的plugin，詳細介紹點擊瞭解更多 Download 1$ git clone https://github.com/powerline/fonts.git Install 1$ ./install.sh Open Iterm2 preferences, and change font to Source Code Pro for Powerline Restart Iterm2 oh-my-zsh如官方說明的 Your terminal never felt this good before.在使用oh-my-zsh前，你從未感覺終端機可以如此的棒。 Download &amp; Install(必要時需輸入使用者密碼) 1$ sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" 設定其他樣式(預設樣式為：ZSH_THEME=”robbyrussell”) 1$ open ~/.zshrc Restart Item2.app more of them Others如果需要修改iTerm2配色 如果想把iTerm2設為預設的terminal 以上內容為2016/10/21讀書會speaker分享後實作過程記錄，感謝Mos大的分享 線上 nodejs 讀書會默司","categories":[{"name":"Note","slug":"Note","permalink":"https://harriswan9a.github.io/categories/Note/"}],"tags":[{"name":"Tools","slug":"Tools","permalink":"https://harriswan9a.github.io/tags/Tools/"},{"name":"iTerm2","slug":"iTerm2","permalink":"https://harriswan9a.github.io/tags/iTerm2/"}],"keywords":[{"name":"Note","slug":"Note","permalink":"https://harriswan9a.github.io/categories/Note/"}]},{"title":"Mac 桌面隱藏/顯示圖示","slug":"Mac-Hide-Show-Desktop","date":"2016-10-21T23:46:16.000Z","updated":"2017-12-03T15:17:40.759Z","comments":true,"path":"2016/10/21/Mac-Hide-Show-Desktop/","link":"","permalink":"https://harriswan9a.github.io/2016/10/21/Mac-Hide-Show-Desktop/","excerpt":"","text":"三五時可能有專案Demo或需要遠端桌面展示給其他人觀看，但怕淋亂的桌面干擾，就可先用簡單的命令來隱藏桌面檔案及資料夾，待會議結束在設為顯示。 操作 打開終端機 輸入下面命令設定隱藏/顯示 顯示桌面圖示1$ defaults write com.apple.finder CreateDesktop -bool TRUE; killall Finder; 隱藏桌面圖示1$ defaults write com.apple.finder CreateDesktop -bool FALSE; killall Finder;","categories":[{"name":"Note","slug":"Note","permalink":"https://harriswan9a.github.io/categories/Note/"}],"tags":[{"name":"Mac","slug":"Mac","permalink":"https://harriswan9a.github.io/tags/Mac/"}],"keywords":[{"name":"Note","slug":"Note","permalink":"https://harriswan9a.github.io/categories/Note/"}]},{"title":"Hello World","slug":"hello-world","date":"2016-10-15T23:46:16.000Z","updated":"2017-12-03T15:17:40.773Z","comments":true,"path":"2016/10/15/hello-world/","link":"","permalink":"https://harriswan9a.github.io/2016/10/15/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"Test","slug":"Test","permalink":"https://harriswan9a.github.io/categories/Test/"}],"tags":[],"keywords":[{"name":"Test","slug":"Test","permalink":"https://harriswan9a.github.io/categories/Test/"}]}]}